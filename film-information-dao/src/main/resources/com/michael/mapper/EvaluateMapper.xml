<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.michael.mapper.EvaluateMapper">
  <resultMap id="BaseResultMap" type="com.michael.pojo.Evaluate">
    <id column="evaluate_id" jdbcType="BIGINT" property="evaluateId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="film_id" jdbcType="BIGINT" property="filmId" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="evaluate_date" jdbcType="DATE" property="evaluateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    evaluate_id, user_id, film_id, grade, comment, evaluate_date
  </sql>
  <select id="selectByExample" parameterType="com.michael.pojo.EvaluateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluate
    where evaluate_id = #{evaluateId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from evaluate
    where evaluate_id = #{evaluateId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.michael.pojo.EvaluateExample">
    delete from evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.michael.pojo.Evaluate">
    insert into evaluate (evaluate_id, user_id, film_id, 
      grade, comment, evaluate_date
      )
    values (#{evaluateId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{filmId,jdbcType=BIGINT}, 
      #{grade,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{evaluateDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.michael.pojo.Evaluate">
    insert into evaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="evaluateId != null">
        evaluate_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="filmId != null">
        film_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="evaluateDate != null">
        evaluate_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="evaluateId != null">
        #{evaluateId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="filmId != null">
        #{filmId,jdbcType=BIGINT},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="evaluateDate != null">
        #{evaluateDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.michael.pojo.EvaluateExample" resultType="java.lang.Long">
    select count(*) from evaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update evaluate
    <set>
      <if test="record.evaluateId != null">
        evaluate_id = #{record.evaluateId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.filmId != null">
        film_id = #{record.filmId,jdbcType=BIGINT},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluateDate != null">
        evaluate_date = #{record.evaluateDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update evaluate
    set evaluate_id = #{record.evaluateId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      film_id = #{record.filmId,jdbcType=BIGINT},
      grade = #{record.grade,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      evaluate_date = #{record.evaluateDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.michael.pojo.Evaluate">
    update evaluate
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="filmId != null">
        film_id = #{filmId,jdbcType=BIGINT},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="evaluateDate != null">
        evaluate_date = #{evaluateDate,jdbcType=DATE},
      </if>
    </set>
    where evaluate_id = #{evaluateId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.michael.pojo.Evaluate">
    update evaluate
    set user_id = #{userId,jdbcType=BIGINT},
      film_id = #{filmId,jdbcType=BIGINT},
      grade = #{grade,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      evaluate_date = #{evaluateDate,jdbcType=DATE}
    where evaluate_id = #{evaluateId,jdbcType=BIGINT}
  </update>

  <delete id="deleteByUserId" parameterType="java.lang.Long">
    delete from  film_desc where user_id = #{userId}
  </delete>
</mapper>